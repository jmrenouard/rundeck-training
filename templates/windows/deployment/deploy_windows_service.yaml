# L'identifiant unique du job.
- id: "uuid-windows-deploy-service"
  # Le nom du job.
  name: "Windows - Déploiement d'un service Windows"
  # La description du job.
  description: "Déploie et installe un nouveau service Windows."
  # Le niveau de log.
  loglevel: INFO
  # Options pour le job.
  options:
    - name: "service_name"
      description: "Nom du service à créer (nom court)."
      required: true
    - name: "display_name"
      description: "Nom d'affichage du service."
      required: true
    - name: "service_exe_path"
      description: "Chemin complet de l'exécutable du service."
      required: true
  # La définition du workflow.
  sequence:
    # Le workflow s'arrête en cas d'échec.
    keepgoing: false
    # Exécution séquentielle.
    strategy: sequential
    # La liste des commandes.
    commands:
      # Étape 1 : Arrêter le service s'il est en cours d'exécution.
      - exec: "powershell -Command Stop-Service -Name '@option.service_name@' -ErrorAction SilentlyContinue"
        description: "Arrêt du service existant (si présent)"
      # Étape 2 : Supprimer le service s'il existe déjà.
      - exec: "sc.exe delete \"@option.service_name@\""
        description: "Suppression du service existant (si présent)"
        # On ignore l'échec car le service peut ne pas exister.
        plugins:
          orchestrator:
            - type: "fail-on-non-zero-exit-code"
              config:
                fail: false
      # Étape 3 : Créer le nouveau service.
      - exec: "sc.exe create \"@option.service_name@\" binPath= \"@option.service_exe_path@\" DisplayName= \"@option.display_name@\" start= auto"
        description: "Création du nouveau service"
      # Étape 4 : Démarrer le service.
      - exec: "powershell -Command Start-Service -Name '@option.service_name@'"
        description: "Démarrage du service"
      # Étape 5 : Vérifier le statut du service.
      - exec: "powershell -Command Get-Service -Name '@option.service_name@'"
        description: "Vérification du statut du service"
  # Section pour les notifications.
  notification:
    # Notification en cas de succès.
    onsuccess:
      - type: email
        config:
          recipients: "admin@example.com"
          subject: "Succès du déploiement du service @option.service_name@ sur ${node.name}"
          message: "Le service '@option.service_name@' a été déployé avec succès sur le nœud ${node.name}."
    # Notification en cas d'échec.
    onfailure:
      - type: email
        config:
          recipients: "admin@example.com"
          subject: "Échec du déploiement du service @option.service_name@ sur ${node.name}"
          message: "Le déploiement du service '@option.service_name@' sur le nœud ${node.name} a échoué."