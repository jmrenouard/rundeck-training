#!/bin/bash

# ==============================================================================
# Script: Installation et Configuration de Certbot pour Nginx
# Auteur: Gemini
# Description: Ce script installe Certbot en utilisant pip et un environnement
#              virtuel Python. Il obtient ensuite un certificat Let's Encrypt
#              pour un domaine donn√© et configure Nginx automatiquement.
# Usage: ./install_certbot.sh <nom_dns_du_serveur> <email_admin>
# ==============================================================================

set -e
set -o pipefail

# --- Couleurs et Fonctions ---
C_RESET='\033[0m'; C_RED='\033[0;31m'; C_GREEN='\033[0;32m'; C_YELLOW='\033[0;33m'; C_BLUE='\033[0;34m'
info() { echo -e    "${C_BLUE}[INFO   ]${C_RESET}‚ÑπÔ∏è $1"; }
success() { echo -e "${C_GREEN}[SUCCESS]${C_RESET}‚úÖ $1"; }
warn() { echo -e    "${C_YELLOW}[WARN   ]${C_RESET}‚ö†Ô∏è $1"; }
error() { echo -e   "${C_RED}[ERROR  ]${C_RESET}‚ùå $1" >&2; echo ".... Fin le script avec une erreur"; exit 1; }
start_script() { echo -e "${C_BLUE}[START  ]${C_RESET}üèÅ $1üöÄ"; }
end_success() { echo -e "${C_GREEN}[END    ]${C_RESET}üèÅ $1"; exit 0; }

# --- V√©rification des param√®tres ---
if [ -z "$1" ] || [ -z "$2" ]; then
    error "Le nom DNS et un email sont requis. Usage: $0 <server_name> <admin_email>"
fi

# --- Variables de Configuration ---
SERVER_NAME="$1"
ADMIN_EMAIL="$2"
PYTHON_VENV_PATH="/opt/certbot"

# --- D√©but du script ---
start_script "### Installation et Configuration de Certbot pour ${SERVER_NAME} ###"

# --- V√©rification des droits ---
if [ "$(id -u)" -ne 0 ]; then
   error "Ce script doit √™tre ex√©cut√© en tant que root. Veuillez utiliser 'sudo'."
fi
success "V√©rification des droits root : OK."

# --- Tests Pr√©requis ---
info "V√©rification des pr√©requis (Nginx, Python, port 80)..."
if ! command -v nginx &>/dev/null; then
    error "Nginx n'est pas install√©. Veuillez ex√©cuter le script 'install_nginx.sh' avant celui-ci."
fi
if ! command -v python3 &>/dev/null; then
    error "Python3 n'est pas trouv√©. Veuillez l'installer (apt-get install python3)."
fi
if ! ss -tuln | grep -q ':80'; then
    warn "Le port 80 ne semble pas √™tre ouvert ou √©cout√© par Nginx. Certbot pourrait √©chouer."
fi
success "Pr√©requis valid√©s."

# --- Installation des d√©pendances syst√®me ---
info "Mise √† jour du cache APT et installation des d√©pendances..."
apt-get update >/dev/null
apt-get install -y python3 python3-dev python3-venv libaugeas-dev gcc &>/dev/null || error "L'installation des d√©pendances a √©chou√©."
success "D√©pendances syst√®me install√©es."

# --- Nettoyage d'anciennes installations de Certbot ---
info "Tentative de suppression d'anciennes versions de Certbot (via APT)..."
if dpkg -l | grep -q "certbot"; then
    apt-get remove -y certbot &>/dev/null
    success "Ancienne version de Certbot (APT) supprim√©e."
else
    info "Aucune version de Certbot via APT n'a √©t√© trouv√©e."
fi

# --- Cr√©ation de l'environnement virtuel Python ---
info "Cr√©ation de l'environnement virtuel Python dans ${PYTHON_VENV_PATH}..."
python3 -m venv "${PYTHON_VENV_PATH}" || error "La cr√©ation de l'environnement virtuel a √©chou√©."
info "Mise √† jour de pip dans l'environnement virtuel..."
"${PYTHON_VENV_PATH}/bin/pip" install --upgrade pip &>/dev/null || error "La mise √† jour de pip a √©chou√©."
success "Environnement virtuel cr√©√© et pip mis √† jour."

# --- Installation de Certbot ---
info "Installation de Certbot et du plugin Nginx via pip..."
"${PYTHON_VENV_PATH}/bin/pip" install certbot certbot-nginx &>/dev/null || error "L'installation de Certbot a √©chou√©."
success "Certbot et le plugin Nginx ont √©t√© install√©s."

# --- Cr√©ation du lien symbolique ---
info "Cr√©ation du lien symbolique pour la commande certbot..."
ln -sf "${PYTHON_VENV_PATH}/bin/certbot" /usr/bin/certbot
success "Lien symbolique '/usr/bin/certbot' cr√©√©."

# --- Obtention du certificat ---
info "Lancement de Certbot pour obtenir le certificat pour ${SERVER_NAME}..."
warn "Certbot va maintenant tenter de configurer Nginx automatiquement."
warn "Assurez-vous que le DNS pour ${SERVER_NAME} pointe bien vers l'IP de ce serveur."

# Explication des options :
# --nginx : Utilise le plugin Nginx
# -d : Sp√©cifie le domaine
# --non-interactive : N'attend pas de saisie utilisateur
# --agree-tos : Accepte les conditions d'utilisation
# -m : Sp√©cifie l'email pour les notifications
# --redirect : Configure Nginx pour rediriger HTTP vers HTTPS
certbot --nginx -d "${SERVER_NAME}" --non-interactive --agree-tos -m "${ADMIN_EMAIL}" --redirect || error "L'obtention du certificat a √©chou√©."
success "Certificat obtenu et Nginx configur√© pour ${SERVER_NAME}."

# --- Configuration du renouvellement automatique ---
info "Configuration du renouvellement automatique via crontab..."
CRON_JOB="0 0,12 * * * root ${PYTHON_VENV_PATH}/bin/python -c 'import random; import time; time.sleep(random.random() * 3600)' && certbot renew -q"
if ! grep -q "certbot renew" /etc/crontab; then
    echo "${CRON_JOB}" >> /etc/crontab
    success "T√¢che cron pour le renouvellement de Certbot ajout√©e."
else
    warn "Une t√¢che de renouvellement pour Certbot semble d√©j√† exister dans crontab."
fi

# --- Validation de la configuration Nginx post-Certbot ---
info "Validation de la configuration Nginx apr√®s modification par Certbot..."
if ! nginx -t &>/dev/null; then
    error "La configuration Nginx est invalide apr√®s l'intervention de Certbot. V√©rifiez les fichiers de configuration."
fi
success "Configuration Nginx post-Certbot valid√©e."

# --- Validation finale ---
info "Red√©marrage de Nginx pour s'assurer que tout est pris en compte..."
systemctl restart nginx
info "Validation finale du service..."
if ! ss -tuln | grep -q ':443'; then error "Nginx n'√©coute pas sur le port 443 apr√®s la configuration de Certbot."; fi
success "Le port 443 est bien ouvert et √©cout√© par Nginx."

end_success "Installation et configuration de Certbot termin√©es pour ${SERVER_NAME}."